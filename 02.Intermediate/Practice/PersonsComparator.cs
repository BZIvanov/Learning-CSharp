using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics.CodeAnalysis;
using System.Linq;

namespace IntermediateLevel
{
    public class Person : IComparable<Person>
    {
        public Person(string name, int age, string town)
        {
            this.Name = name;
            this.Age = age;
            this.Town = town;
        }
        public string Name { get; set; }
        public int Age { get; set; }
        public string Town { get; set; }

        // this interface is auto generated by IComparable and then we edit it based on our needs
        public int CompareTo([AllowNull] Person other)
        {
            int result = 1;
            if (other != null)
            {
                result = this.Name.CompareTo(other.Name);
                if (result == 0)
                {
                    result = this.Age.CompareTo(other.Age);
                    if (result == 0)
                    {
                        result = this.Town.CompareTo(other.Town);
                    }
                }
            }

            return result;
        }
    }

    class PersonsComparator
    {
        static void Main(string[] args)
        {
            /* Input
            Mitko 21 Sofia
            Deana 21 Sofia
            Deana 21 Sofia
            END
            2
            */
            var people = new List<Person>();

            string input;
            while ((input = Console.ReadLine()) != "END")
            {
                string[] personInfo = input.Split(' ').ToArray();
                string name = personInfo[0];
                int age = int.Parse(personInfo[1]);
                string town = personInfo[2];

                var person = new Person(name, age, town);
                people.Add(person);
            }

            int n = int.Parse(Console.ReadLine());
            int matchesCount = 0;
            var personToCompare = people[n - 1];

            foreach (var person in people)
            {
                if (personToCompare.CompareTo(person) == 0)
                {
                    matchesCount++;
                }
            }

            if (matchesCount <= 1)
            {
                Console.WriteLine("No matches");
            }
            else
            {
                int notMatchesCount = people.Count - matchesCount;
                Console.WriteLine($"{matchesCount} {notMatchesCount} {people.Count}");
            }
        }
    }
}
